{"version":3,"sources":["assets/images/macbook.png","components/common/Header/Header.tsx","components/common/Footer/Footer.tsx","components/common/PageTemplate/PageTemplate.tsx","components/Main/Home/Home.tsx","components/Main/Intro/Intro.tsx","components/Main/index.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Header","state","mobileOpen","handleClick","_this","setState","react_default","a","createElement","className","this","props","scrollTop","href","concat","onClick","Component","PageTemplate","componentDidMount","window","addEventListener","WindowScroll","document","documentElement","nextProps","nextState","common_Header_Header","children","Footer","Home","selectedFile","handleChange","e","file","target","files","length","name","id","htmlFor","type","onChange","Intro","src","Macbook","alt","width","Main","Main_Home_Home","Main_Intro_Intro","App","common_PageTemplate_PageTemplate","components_Main","Boolean","location","hostname","match","ReactDOM","render","components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eac7cbd5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/macbook.dddde1f3.png\";","import React, { Component } from 'react';\nimport './Header.scss';\nimport styled from 'styled-components';\n\ninterface Props {\n    scrollTop: number\n}\n\ninterface State {\n    mobileOpen: boolean\n}\n\n\nclass Header extends Component<Props, State> {\n    state = {\n        mobileOpen: false\n    }\n\n    handleClick = () => {\n        this.setState({\n            mobileOpen: !this.state.mobileOpen\n        });\n    }\n\n    render () {\n        return (\n            <header className={ this.props.scrollTop >= 100 ? 'header-fix' : ''}>\n                <nav>\n                    <div className=\"header-container\">\n                        <div className=\"logo\">\n                            <h1>\n                                <a href=\"/\">Picxy</a>\n                            </h1>\n                        </div>\n                        <ul className={`gnb_list ${this.state.mobileOpen ? 'is_open' : ''}`}>\n                            <li><a href=\"#\">홈</a></li>\n                            <li><a href=\"#\">서비스 소개</a></li>\n                            <li><a href=\"#\">픽시 플러스</a></li>\n                        </ul>\n                        <div className={`mobile-menu ${this.state.mobileOpen ? 'is_open' : ''}`} onClick={this.handleClick}>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                        </div>\n                    </div>\n                </nav>\n            </header>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\n\nconst Header: React.FC = () => {\n    return (\n        <footer></footer>\n    );\n};\n\nexport default Header;","import React, { ReactNode, Component } from 'react';\nimport Header from '../Header';\nimport Footer from '../Footer';\n\ninterface Props {\n    children: ReactNode\n}\n\ninterface State {\n    scrollTop: number\n}\n\n\nclass PageTemplate extends Component<Props, State> {\n    state = {\n        scrollTop: 0\n    };\n    componentDidMount = () => {\n        window.addEventListener('scroll', this.WindowScroll);\n    }\n\n    shouldComponentUpdate (nextProps: Props, nextState: State): any {\n        if (this.state.scrollTop <= 100 && nextState.scrollTop >= 100 || this.state.scrollTop >= 100 && nextState.scrollTop <= 100) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    \n    WindowScroll  = () => {\n        this.setState({\n            scrollTop: document.documentElement.scrollTop\n        });\n    }\n\n    render () {\n        return (\n            <div className=\"page-template\">\n             <Header scrollTop ={this.state.scrollTop} />\n             <main>\n                 {this.props.children}\n             </main>\n             <Footer />\n         </div>\n        );\n    }\n}\n\nexport default PageTemplate;","import React, { Component } from 'react';\nimport './Home.scss';\n//import console = require('console');\n\n\ninterface Props {\n    \n};\n\ninterface State {\n    selectedFile: string\n};\n\nclass Home extends Component<Props, State> {\n    state = {\n        selectedFile: ''\n    };\n\n    handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const file: any = e.target.files;\n   \n        if (file.length) {\n            this.setState({\n                selectedFile: file[0].name\n            });\n        }\n        \n    }\n\n    render () {\n        return (\n            <section id=\"home\">\n                <div className=\"home-wrap\">\n                    <div className=\"uploadBox\">\n                        <h2>파일 업로드</h2>\n                        <form>\n                            <div className=\"filebox\">\n                                <label htmlFor=\"ex_file\">\n                                    파일을 선택해 주세요\n                                </label>\n                                <input type=\"file\" onChange={this.handleChange} id=\"ex_file\" />\n                            </div>\n                            <p className=\"fileName\">{this.state.selectedFile}</p>\n                        </form>\n                    </div>\n                    <div className=\"titleInfo\">\n                        <h3><span className=\"title-concept\">사진을 쉽고 빠르게 자르자!</span> <br/>윤대영쌤의 딥러닝과 함께하는<br/>재미있는 누끼따기</h3>\n                        <button className=\"startBtn\"><span>START</span> 지금 바로 시작하기</button>  \n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Home;","import React from 'react';\nimport './Intro.scss';\nimport Macbook from '../../../assets/images/macbook.png';\n\nconst Intro: React.FC = () => {\n    return (\n        <section id=\"intro\">\n            <div className=\"intro-wrap\">\n                <div className=\"main-title\">\n                    <h2><span className=\"color-main\">PICXY</span> 서비스 소개</h2>\n                    <p>포토샵, 일러스트로 자르기 힘든 사진을 쉽게 자를 수 있도록<br/>단 한번의 업로드로 사진을 분할하며, 원하는 부분만 클릭해서<br/>쉽게 다운로드 할 수 있습니다.<br/><br/></p>\n                    <button className=\"startBtn\"><span>START</span> 지금 바로 시작하기</button>  \n                </div>\n                <div className=\"image-wrap\">\n                    <img src={Macbook} alt=\"macbook\" width=\"700\" />\n                </div>\n                \n            </div>\n        </section>\n    );\n};\n\nexport default Intro;","import React from 'react';\nimport './Main.scss';\nimport Home from './Home';\nimport Intro from './Intro';\n\nconst Main: React.FC = () => {\n    return (\n        <div className=\"mainContainer\">\n            <div className=\"sectionWrap\">\n                <Home />\n                <Intro />\n            </div>            \n        </div>\n    );\n};\n\nexport default Main;","import React, { Component } from 'react';\nimport '../styles/reset.scss';\nimport PageTemplate from './common/PageTemplate';\nimport Main from './Main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <PageTemplate>\n          <Main />\n        </PageTemplate>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}